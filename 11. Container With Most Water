Link: https://leetcode.com/problems/container-with-most-water/description/

This is greedy algorithm. Set up two pointers (left, right) from two sides. if height[left]<height[right], then move the left pointer. Else, move the right pointer. The optimal solution should be in one of them.

class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        left, right = 0, len(height)-1
        ans = 0
        while left<right:
            curAns = min(height[left], height[right])*(right-left)
            ans = max(curAns, ans)
            if height[left]<height[right]:
                left+=1
            else:
                right-=1
        return ans
