# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        dummy = ListNode(0)
        head = dummy
        flag = 0

        while l1 or l2 or flag:
            if l1 and l2:
                summ = (l1.val + l2.val + flag)%10
                flag = (l1.val + l2.val + flag)//10
            elif l1 and flag == 1:
                summ = (l1.val + flag)%10
                flag = (l1.val +flag)//10
            elif l2 and flag == 1:
                summ = (l2.val + flag)%10
                flag = (l2.val + flag)//10
            elif flag == 1:
                summ = 1
                flag = 0
            else:
                head.next = (l1 or l2)
                return dummy.next

            head.next = ListNode(summ)
            head = head.next
            l1 = l1.next if l1 else l1
            l2 = l2.next if l2 else l2

        return dummy.next
